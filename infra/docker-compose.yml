volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:16
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  backend:
    container_name: foodgram-backend
    build: ../backend
    env_file: .env
    command: 
    - sh
    - -c
    - |
      python manage.py collectstatic
      python manage.py migrate
      python manage.py shell -c "exec(open('data/load_ingredients.py').read())"
      python manage.py shell -c "exec(open('data/load_test_data.py').read())"
      gunicorn --bind 0.0.0.0:8000 foodgram_backend.wsgi
    volumes:
      - static:/app/static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/usr/share/nginx/backend-static/
      - media:/usr/share/nginx/media/
    depends_on:
      - backend
